{
  "stats": {
    "suites": 8,
    "tests": 48,
    "passes": 48,
    "pending": 0,
    "failures": 0,
    "start": "2019-08-05T12:02:07.262Z",
    "end": "2019-08-05T12:02:07.304Z",
    "duration": 42,
    "testsRegistered": 48,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1a40f5fc-5352-4840-8a20-c8d7be91d17f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0afbc60d-2a0e-4687-b7a2-f7ed6ca7b496",
          "title": "error check",
          "fullFile": "D:\\automationJS\\task1\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "convert unknown measurement to cm",
              "fullTitle": "error check convert unknown measurement to cm",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => item(1, 'some value')).throw('Unknown measurement');",
              "err": {},
              "uuid": "0833c505-924c-4e04-b3ed-ff05a5fc9cc8",
              "parentUUID": "0afbc60d-2a0e-4687-b7a2-f7ed6ca7b496",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "convert negative value to cm",
              "fullTitle": "error check convert negative value to cm",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => item(-100, `${measurementsName[i]}`)).throw('The value must be a positive number');",
              "err": {},
              "uuid": "03efacda-e1fa-4dca-9fba-5140a5a2f846",
              "parentUUID": "0afbc60d-2a0e-4687-b7a2-f7ed6ca7b496",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "convert unknown measurement to m",
              "fullTitle": "error check convert unknown measurement to m",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => item(1, 'some value')).throw('Unknown measurement');",
              "err": {},
              "uuid": "7c0feb20-6323-4273-b8d5-62ded0c5a94a",
              "parentUUID": "0afbc60d-2a0e-4687-b7a2-f7ed6ca7b496",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "convert negative value to m",
              "fullTitle": "error check convert negative value to m",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => item(-100, `${measurementsName[i]}`)).throw('The value must be a positive number');",
              "err": {},
              "uuid": "7bb433ad-ce96-4219-b225-2f4afa5f0a3c",
              "parentUUID": "0afbc60d-2a0e-4687-b7a2-f7ed6ca7b496",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "convert unknown measurement to miles",
              "fullTitle": "error check convert unknown measurement to miles",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => item(1, 'some value')).throw('Unknown measurement');",
              "err": {},
              "uuid": "d7834e9d-f765-45b3-b948-67bc135c6f14",
              "parentUUID": "0afbc60d-2a0e-4687-b7a2-f7ed6ca7b496",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "convert negative value to miles",
              "fullTitle": "error check convert negative value to miles",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => item(-100, `${measurementsName[i]}`)).throw('The value must be a positive number');",
              "err": {},
              "uuid": "bf0f12cd-38e4-460b-a7bf-cda3df632240",
              "parentUUID": "0afbc60d-2a0e-4687-b7a2-f7ed6ca7b496",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "convert unknown measurement to sea miles",
              "fullTitle": "error check convert unknown measurement to sea miles",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => item(1, 'some value')).throw('Unknown measurement');",
              "err": {},
              "uuid": "f181646a-0162-4175-a507-5d742369f865",
              "parentUUID": "0afbc60d-2a0e-4687-b7a2-f7ed6ca7b496",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "convert negative value to sea miles",
              "fullTitle": "error check convert negative value to sea miles",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => item(-100, `${measurementsName[i]}`)).throw('The value must be a positive number');",
              "err": {},
              "uuid": "d0ea3285-4d7b-4118-a40d-64324b8db919",
              "parentUUID": "0afbc60d-2a0e-4687-b7a2-f7ed6ca7b496",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "convert unknown measurement to inches",
              "fullTitle": "error check convert unknown measurement to inches",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => item(1, 'some value')).throw('Unknown measurement');",
              "err": {},
              "uuid": "5a613375-5314-4386-b893-3c1ecbf345f5",
              "parentUUID": "0afbc60d-2a0e-4687-b7a2-f7ed6ca7b496",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "convert negative value to inches",
              "fullTitle": "error check convert negative value to inches",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => item(-100, `${measurementsName[i]}`)).throw('The value must be a positive number');",
              "err": {},
              "uuid": "e7c07988-16f6-4733-b4a6-befb9c362f55",
              "parentUUID": "0afbc60d-2a0e-4687-b7a2-f7ed6ca7b496",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "convert unknown measurement to foot",
              "fullTitle": "error check convert unknown measurement to foot",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => item(1, 'some value')).throw('Unknown measurement');",
              "err": {},
              "uuid": "3e6bb123-2eff-4894-ba3f-ff48c2cd8220",
              "parentUUID": "0afbc60d-2a0e-4687-b7a2-f7ed6ca7b496",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "convert negative value to foot",
              "fullTitle": "error check convert negative value to foot",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => item(-100, `${measurementsName[i]}`)).throw('The value must be a positive number');",
              "err": {},
              "uuid": "5121095e-1904-4407-aefd-d34a457560e9",
              "parentUUID": "0afbc60d-2a0e-4687-b7a2-f7ed6ca7b496",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0833c505-924c-4e04-b3ed-ff05a5fc9cc8",
            "03efacda-e1fa-4dca-9fba-5140a5a2f846",
            "7c0feb20-6323-4273-b8d5-62ded0c5a94a",
            "7bb433ad-ce96-4219-b225-2f4afa5f0a3c",
            "d7834e9d-f765-45b3-b948-67bc135c6f14",
            "bf0f12cd-38e4-460b-a7bf-cda3df632240",
            "f181646a-0162-4175-a507-5d742369f865",
            "d0ea3285-4d7b-4118-a40d-64324b8db919",
            "5a613375-5314-4386-b893-3c1ecbf345f5",
            "e7c07988-16f6-4733-b4a6-befb9c362f55",
            "3e6bb123-2eff-4894-ba3f-ff48c2cd8220",
            "5121095e-1904-4407-aefd-d34a457560e9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cb155257-3b52-49b4-8d16-a494701e5592",
          "title": "convertToMeasurement",
          "fullFile": "D:\\automationJS\\task1\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "857fd896-90ab-421f-b5e3-f1b9fb52af3b",
              "title": "convertToCm",
              "fullFile": "D:\\automationJS\\task1\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "convert cm to cm",
                  "fullTitle": "convertToMeasurement convertToCm convert cm to cm",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToCm(1, key)).equal(CONVERT_TO_CM[key]);",
                  "err": {},
                  "uuid": "ba24d9ab-de16-45d1-9a6c-6018e01541ed",
                  "parentUUID": "857fd896-90ab-421f-b5e3-f1b9fb52af3b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert m to cm",
                  "fullTitle": "convertToMeasurement convertToCm convert m to cm",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToCm(1, key)).equal(CONVERT_TO_CM[key]);",
                  "err": {},
                  "uuid": "e029b45e-1488-4c27-8750-65d3d9feb851",
                  "parentUUID": "857fd896-90ab-421f-b5e3-f1b9fb52af3b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert miles to cm",
                  "fullTitle": "convertToMeasurement convertToCm convert miles to cm",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToCm(1, key)).equal(CONVERT_TO_CM[key]);",
                  "err": {},
                  "uuid": "8e188cc0-a733-4a97-9688-438ab98ff99b",
                  "parentUUID": "857fd896-90ab-421f-b5e3-f1b9fb52af3b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert seaMiles to cm",
                  "fullTitle": "convertToMeasurement convertToCm convert seaMiles to cm",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToCm(1, key)).equal(CONVERT_TO_CM[key]);",
                  "err": {},
                  "uuid": "2e0c8571-f461-47f2-9f9d-c38bcbb9f9d3",
                  "parentUUID": "857fd896-90ab-421f-b5e3-f1b9fb52af3b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert inches to cm",
                  "fullTitle": "convertToMeasurement convertToCm convert inches to cm",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToCm(1, key)).equal(CONVERT_TO_CM[key]);",
                  "err": {},
                  "uuid": "7c617471-3b3e-41ee-bcda-0f7fdf5c3049",
                  "parentUUID": "857fd896-90ab-421f-b5e3-f1b9fb52af3b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert foot to cm",
                  "fullTitle": "convertToMeasurement convertToCm convert foot to cm",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToCm(1, key)).equal(CONVERT_TO_CM[key]);",
                  "err": {},
                  "uuid": "64694ea0-d1b2-4a56-a220-7205cb6d81a4",
                  "parentUUID": "857fd896-90ab-421f-b5e3-f1b9fb52af3b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ba24d9ab-de16-45d1-9a6c-6018e01541ed",
                "e029b45e-1488-4c27-8750-65d3d9feb851",
                "8e188cc0-a733-4a97-9688-438ab98ff99b",
                "2e0c8571-f461-47f2-9f9d-c38bcbb9f9d3",
                "7c617471-3b3e-41ee-bcda-0f7fdf5c3049",
                "64694ea0-d1b2-4a56-a220-7205cb6d81a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1c00c136-0fbd-4c06-b99a-0ecdb878a3e8",
              "title": "convertToMeters",
              "fullFile": "D:\\automationJS\\task1\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "convert cm to m",
                  "fullTitle": "convertToMeasurement convertToMeters convert cm to m",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToMeters(1, key)).equal(CONVERT_TO_M[key]);",
                  "err": {},
                  "uuid": "8bccea09-51da-454d-a914-bae067c7f0a1",
                  "parentUUID": "1c00c136-0fbd-4c06-b99a-0ecdb878a3e8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert m to m",
                  "fullTitle": "convertToMeasurement convertToMeters convert m to m",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToMeters(1, key)).equal(CONVERT_TO_M[key]);",
                  "err": {},
                  "uuid": "ffb330c7-2cbc-4f28-95b1-da20f7c41202",
                  "parentUUID": "1c00c136-0fbd-4c06-b99a-0ecdb878a3e8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert miles to m",
                  "fullTitle": "convertToMeasurement convertToMeters convert miles to m",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToMeters(1, key)).equal(CONVERT_TO_M[key]);",
                  "err": {},
                  "uuid": "e99fe528-a717-4b03-bce6-afc39f69eb2b",
                  "parentUUID": "1c00c136-0fbd-4c06-b99a-0ecdb878a3e8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert seaMiles to m",
                  "fullTitle": "convertToMeasurement convertToMeters convert seaMiles to m",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToMeters(1, key)).equal(CONVERT_TO_M[key]);",
                  "err": {},
                  "uuid": "d291fc51-ac83-45df-99c0-9217b785b0b9",
                  "parentUUID": "1c00c136-0fbd-4c06-b99a-0ecdb878a3e8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert inches to m",
                  "fullTitle": "convertToMeasurement convertToMeters convert inches to m",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToMeters(1, key)).equal(CONVERT_TO_M[key]);",
                  "err": {},
                  "uuid": "22709b4d-6d81-44dd-8765-4cfa732ef404",
                  "parentUUID": "1c00c136-0fbd-4c06-b99a-0ecdb878a3e8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert foot to m",
                  "fullTitle": "convertToMeasurement convertToMeters convert foot to m",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToMeters(1, key)).equal(CONVERT_TO_M[key]);",
                  "err": {},
                  "uuid": "5be5c511-38b1-4807-8774-a81e95e6e7a0",
                  "parentUUID": "1c00c136-0fbd-4c06-b99a-0ecdb878a3e8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8bccea09-51da-454d-a914-bae067c7f0a1",
                "ffb330c7-2cbc-4f28-95b1-da20f7c41202",
                "e99fe528-a717-4b03-bce6-afc39f69eb2b",
                "d291fc51-ac83-45df-99c0-9217b785b0b9",
                "22709b4d-6d81-44dd-8765-4cfa732ef404",
                "5be5c511-38b1-4807-8774-a81e95e6e7a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c5d6b543-1fd8-4a29-ae80-928d36430560",
              "title": "convertToMiles",
              "fullFile": "D:\\automationJS\\task1\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "convert cm to miles",
                  "fullTitle": "convertToMeasurement convertToMiles convert cm to miles",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToMiles(1, key)).equal(CONVERT_TO_MILES[key]);",
                  "err": {},
                  "uuid": "0956a1d9-88fd-4c0c-9129-51dc1abb1cc8",
                  "parentUUID": "c5d6b543-1fd8-4a29-ae80-928d36430560",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert m to miles",
                  "fullTitle": "convertToMeasurement convertToMiles convert m to miles",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToMiles(1, key)).equal(CONVERT_TO_MILES[key]);",
                  "err": {},
                  "uuid": "d3cc20ed-9b46-4553-8dd6-77012e77440e",
                  "parentUUID": "c5d6b543-1fd8-4a29-ae80-928d36430560",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert miles to miles",
                  "fullTitle": "convertToMeasurement convertToMiles convert miles to miles",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToMiles(1, key)).equal(CONVERT_TO_MILES[key]);",
                  "err": {},
                  "uuid": "f2b21a90-b501-42f1-9fe5-4e74adf94409",
                  "parentUUID": "c5d6b543-1fd8-4a29-ae80-928d36430560",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert seaMiles to miles",
                  "fullTitle": "convertToMeasurement convertToMiles convert seaMiles to miles",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToMiles(1, key)).equal(CONVERT_TO_MILES[key]);",
                  "err": {},
                  "uuid": "40819544-8890-455d-8a12-7151edeca852",
                  "parentUUID": "c5d6b543-1fd8-4a29-ae80-928d36430560",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert inches to miles",
                  "fullTitle": "convertToMeasurement convertToMiles convert inches to miles",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToMiles(1, key)).equal(CONVERT_TO_MILES[key]);",
                  "err": {},
                  "uuid": "f2dac90b-66d9-4301-923b-bc27f1f961a3",
                  "parentUUID": "c5d6b543-1fd8-4a29-ae80-928d36430560",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert foot to miles",
                  "fullTitle": "convertToMeasurement convertToMiles convert foot to miles",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToMiles(1, key)).equal(CONVERT_TO_MILES[key]);",
                  "err": {},
                  "uuid": "77fc2855-22df-436a-a4da-a1fa0f2f8e57",
                  "parentUUID": "c5d6b543-1fd8-4a29-ae80-928d36430560",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0956a1d9-88fd-4c0c-9129-51dc1abb1cc8",
                "d3cc20ed-9b46-4553-8dd6-77012e77440e",
                "f2b21a90-b501-42f1-9fe5-4e74adf94409",
                "40819544-8890-455d-8a12-7151edeca852",
                "f2dac90b-66d9-4301-923b-bc27f1f961a3",
                "77fc2855-22df-436a-a4da-a1fa0f2f8e57"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "dd78c44b-9cde-4f1a-9f10-958f8bf29345",
              "title": "convertToSeaMiles",
              "fullFile": "D:\\automationJS\\task1\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "convert cm to seaMiles",
                  "fullTitle": "convertToMeasurement convertToSeaMiles convert cm to seaMiles",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToSeaMiles(1, key)).equal(CONVERT_TO_SEA_MILES[key]);",
                  "err": {},
                  "uuid": "a16da217-f214-48c0-8c43-05fbf1430c27",
                  "parentUUID": "dd78c44b-9cde-4f1a-9f10-958f8bf29345",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert m to seaMiles",
                  "fullTitle": "convertToMeasurement convertToSeaMiles convert m to seaMiles",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToSeaMiles(1, key)).equal(CONVERT_TO_SEA_MILES[key]);",
                  "err": {},
                  "uuid": "71d14244-8579-455b-aa77-b3edbee69cb6",
                  "parentUUID": "dd78c44b-9cde-4f1a-9f10-958f8bf29345",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert miles to seaMiles",
                  "fullTitle": "convertToMeasurement convertToSeaMiles convert miles to seaMiles",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToSeaMiles(1, key)).equal(CONVERT_TO_SEA_MILES[key]);",
                  "err": {},
                  "uuid": "234d2898-ac03-41e1-a3f2-99e2e12a696b",
                  "parentUUID": "dd78c44b-9cde-4f1a-9f10-958f8bf29345",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert seaMiles to seaMiles",
                  "fullTitle": "convertToMeasurement convertToSeaMiles convert seaMiles to seaMiles",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToSeaMiles(1, key)).equal(CONVERT_TO_SEA_MILES[key]);",
                  "err": {},
                  "uuid": "bdc5efd6-5823-4add-9a94-a9d028da7aea",
                  "parentUUID": "dd78c44b-9cde-4f1a-9f10-958f8bf29345",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert inches to seaMiles",
                  "fullTitle": "convertToMeasurement convertToSeaMiles convert inches to seaMiles",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToSeaMiles(1, key)).equal(CONVERT_TO_SEA_MILES[key]);",
                  "err": {},
                  "uuid": "da07adec-30d8-40f1-b775-71c46e07be1c",
                  "parentUUID": "dd78c44b-9cde-4f1a-9f10-958f8bf29345",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert foot to seaMiles",
                  "fullTitle": "convertToMeasurement convertToSeaMiles convert foot to seaMiles",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToSeaMiles(1, key)).equal(CONVERT_TO_SEA_MILES[key]);",
                  "err": {},
                  "uuid": "f6f3cfdb-422e-45ac-a6d7-7b21079936c8",
                  "parentUUID": "dd78c44b-9cde-4f1a-9f10-958f8bf29345",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a16da217-f214-48c0-8c43-05fbf1430c27",
                "71d14244-8579-455b-aa77-b3edbee69cb6",
                "234d2898-ac03-41e1-a3f2-99e2e12a696b",
                "bdc5efd6-5823-4add-9a94-a9d028da7aea",
                "da07adec-30d8-40f1-b775-71c46e07be1c",
                "f6f3cfdb-422e-45ac-a6d7-7b21079936c8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "418be491-c045-45a1-a513-633fee8d7c91",
              "title": "convertToInches",
              "fullFile": "D:\\automationJS\\task1\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "convert cm to inches",
                  "fullTitle": "convertToMeasurement convertToInches convert cm to inches",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToInches(1, key)).equal(CONVERT_TO_INCHES[key]);",
                  "err": {},
                  "uuid": "d77ab3e5-4487-419c-99ab-bf548e16df69",
                  "parentUUID": "418be491-c045-45a1-a513-633fee8d7c91",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert m to inches",
                  "fullTitle": "convertToMeasurement convertToInches convert m to inches",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToInches(1, key)).equal(CONVERT_TO_INCHES[key]);",
                  "err": {},
                  "uuid": "26cb7f96-af7c-4ba5-a869-c3f93972e58a",
                  "parentUUID": "418be491-c045-45a1-a513-633fee8d7c91",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert miles to inches",
                  "fullTitle": "convertToMeasurement convertToInches convert miles to inches",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToInches(1, key)).equal(CONVERT_TO_INCHES[key]);",
                  "err": {},
                  "uuid": "f6576ab0-d4e4-4132-83f3-84b105d8b34b",
                  "parentUUID": "418be491-c045-45a1-a513-633fee8d7c91",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert seaMiles to inches",
                  "fullTitle": "convertToMeasurement convertToInches convert seaMiles to inches",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToInches(1, key)).equal(CONVERT_TO_INCHES[key]);",
                  "err": {},
                  "uuid": "3b0296de-ac07-417b-92b2-0529f85a809c",
                  "parentUUID": "418be491-c045-45a1-a513-633fee8d7c91",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert inches to inches",
                  "fullTitle": "convertToMeasurement convertToInches convert inches to inches",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToInches(1, key)).equal(CONVERT_TO_INCHES[key]);",
                  "err": {},
                  "uuid": "f77d8ad5-2900-416a-bb6b-9a83e354d7c8",
                  "parentUUID": "418be491-c045-45a1-a513-633fee8d7c91",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert foot to inches",
                  "fullTitle": "convertToMeasurement convertToInches convert foot to inches",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToInches(1, key)).equal(CONVERT_TO_INCHES[key]);",
                  "err": {},
                  "uuid": "8f62c043-8d05-4a6e-b741-6dc35c463a94",
                  "parentUUID": "418be491-c045-45a1-a513-633fee8d7c91",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d77ab3e5-4487-419c-99ab-bf548e16df69",
                "26cb7f96-af7c-4ba5-a869-c3f93972e58a",
                "f6576ab0-d4e4-4132-83f3-84b105d8b34b",
                "3b0296de-ac07-417b-92b2-0529f85a809c",
                "f77d8ad5-2900-416a-bb6b-9a83e354d7c8",
                "8f62c043-8d05-4a6e-b741-6dc35c463a94"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3708a3dc-3221-4f6e-bf98-dadd79720899",
              "title": "convertToFoot",
              "fullFile": "D:\\automationJS\\task1\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "convert cm to foot",
                  "fullTitle": "convertToMeasurement convertToFoot convert cm to foot",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToFoot(1, key)).equal(CONVERT_TO_FOOT[key]);",
                  "err": {},
                  "uuid": "e9b7f266-48cd-46ce-82f0-29e0c13471a7",
                  "parentUUID": "3708a3dc-3221-4f6e-bf98-dadd79720899",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert m to foot",
                  "fullTitle": "convertToMeasurement convertToFoot convert m to foot",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToFoot(1, key)).equal(CONVERT_TO_FOOT[key]);",
                  "err": {},
                  "uuid": "4e182fb2-855f-4c74-94bf-6aa41daca651",
                  "parentUUID": "3708a3dc-3221-4f6e-bf98-dadd79720899",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert miles to foot",
                  "fullTitle": "convertToMeasurement convertToFoot convert miles to foot",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToFoot(1, key)).equal(CONVERT_TO_FOOT[key]);",
                  "err": {},
                  "uuid": "1722b413-3360-495f-b4c2-02433d8c7926",
                  "parentUUID": "3708a3dc-3221-4f6e-bf98-dadd79720899",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert seaMiles to foot",
                  "fullTitle": "convertToMeasurement convertToFoot convert seaMiles to foot",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToFoot(1, key)).equal(CONVERT_TO_FOOT[key]);",
                  "err": {},
                  "uuid": "dc068149-cfd3-4f36-9cad-fe3b5bcdd3e8",
                  "parentUUID": "3708a3dc-3221-4f6e-bf98-dadd79720899",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert inches to foot",
                  "fullTitle": "convertToMeasurement convertToFoot convert inches to foot",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToFoot(1, key)).equal(CONVERT_TO_FOOT[key]);",
                  "err": {},
                  "uuid": "deea2116-0f3b-4861-b08d-8dafa4e4cdf6",
                  "parentUUID": "3708a3dc-3221-4f6e-bf98-dadd79720899",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "convert foot to foot",
                  "fullTitle": "convertToMeasurement convertToFoot convert foot to foot",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(convertToFoot(1, key)).equal(CONVERT_TO_FOOT[key]);",
                  "err": {},
                  "uuid": "75d1b61b-d375-4868-a909-cf1e1475b698",
                  "parentUUID": "3708a3dc-3221-4f6e-bf98-dadd79720899",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e9b7f266-48cd-46ce-82f0-29e0c13471a7",
                "4e182fb2-855f-4c74-94bf-6aa41daca651",
                "1722b413-3360-495f-b4c2-02433d8c7926",
                "dc068149-cfd3-4f36-9cad-fe3b5bcdd3e8",
                "deea2116-0f3b-4861-b08d-8dafa4e4cdf6",
                "75d1b61b-d375-4868-a909-cf1e1475b698"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "useInlineDiffs": false
      },
      "version": "4.0.1"
    },
    "marge": {
      "options": null,
      "version": "4.0.1"
    }
  }
}